1. Set up LAMP (http://fedorasolved.org/server-solutions/lamp-stack)
    port: 3306
    protocol: tcp

2. Database details:

mysqladmin -u root password tianyi
mysql -u root -p

CREATE DATABASE reimbursement_db;

ALTER DATABASE reimbursement_db DEFAULT CHARACTER SET 'utf8';

USE reimbursement_db;

CREATE TABLE users
(
email VARCHAR(255) NOT NULL,
password VARCHAR(255) NOT NULL,
first_name VARCHAR(255) NOT NULL,
last_name VARCHAR(255) NOT NULL,
id_number VARCHAR(127),
status INT(1) NOT NULL,
PRIMARY KEY (email)
);

CREATE TABLE advisors
(
student_email VARCHAR(255) NOT NULL,
advisor_email VARCHAR(255) NOT NULL,
PRIMARY KEY (student_email),
FOREIGN KEY (advisor_email) REFERENCES users(email) 
ON UPDATE CASCADE
ON DELETE CASCADE,
FOREIGN KEY (student_email) REFERENCES users(email) 
ON UPDATE CASCADE
ON DELETE CASCADE
);

CREATE TABLE announcements
(
announce_id INT NOT NULL AUTO_INCREMENT,
title VARCHAR(511) NOT NULL,
content TEXT NOT NULL,
poster VARCHAR(255) NOT NULL,
date DATETIME NOT NULL,
PRIMARY KEY (announce_id)
);

CREATE TABLE requests
(
request_id INT NOT NULL AUTO_INCREMENT,
submitter_email VARCHAR(255),
submitter_name VARCHAR(255),
submitter_id_number VARCHAR(127),
date_start DATE NOT NULL,
date_advisor_agreed DATE,
date_net_report_finished DATE,
date_student_finished DATE,
date_finished DATE,
amount INT NOT NULL,
have_budget INT(1) NOT NULL,
financial_assistant_name VARCHAR(255),
page_number INT NOT NULL,
subject INT NOT NULL,
subject_other VARCHAR(127),
have_all_files INT(1) NOT NULL,
contract_company_name VARCHAR(255),
contract_location VARCHAR(127),
contract_bank_number VARCHAR(255),
contract_opener VARCHAR(255),
receipt_same_as_actual INT(1) NOT NULL,
receipt_difference TEXT,
professor_class VARCHAR(255),
professor_name VARCHAR(255),
expanse_number VARCHAR(255),
expanse_name VARCHAR(255),
payment_option INT,
payment_option_other VARCHAR(255),
usage_optional TEXT,
note_optional TEXT,
last_added_note TEXT,
request_status INT(1) NOT NULL,
PRIMARY KEY (request_id),
FOREIGN KEY (submitter_email) REFERENCES users(email) 
ON UPDATE CASCADE
ON DELETE CASCADE
);

// status: 0 -- master professor, 1 -- grad student, 2 -- undergrad student, 3 -- professor
// request_status:
// 0 -- submitted, need advisor to agree.
// 1 -- advisor agreed, need professor to modify and finish net reporting.
// 2 -- professor finished net reporting, need student to complete.
// 3 -- student completed, professor didn't add comment.
// 4 -- all completed, professor added comment.

INSERT INTO users VALUES ('wang103@illinois.edu', md5('tianyi'), '天意', '王', 'A1', 1);

INSERT INTO users VALUES ('wang103uiuc@gmail.com', md5('bailin'), '琳', '柏', '', 0);

INSERT INTO users VALUES ('hypervisorII@hotmail.com', md5('tianyi'), '1', 'student', 'S1', 1);
INSERT INTO users VALUES ('test2@hotmail.com', md5('tianyi'), '2', 'student', 'S1', 1);
INSERT INTO users VALUES ('test3@hotmail.com', md5('tianyi'), '3', 'student', 'S1', 1);
INSERT INTO users VALUES ('test4@hotmail.com', md5('tianyi'), '4', 'student', 'S1', 1);
INSERT INTO users VALUES ('test5@hotmail.com', md5('tianyi'), '5', 'student', 'S1', 1);
INSERT INTO users VALUES ('test6@hotmail.com', md5('tianyi'), '6', 'student', 'S1', 1);
INSERT INTO users VALUES ('test7@hotmail.com', md5('tianyi'), '7', 'student', 'S1', 1);

INSERT INTO users VALUES ('wang103@uiuc.edu', md5('tianyi'), '1', 'professor', '', 3);
INSERT INTO users VALUES ('test22@hotmail.com', md5('tianyi'), '2', 'professor', '', 3);
INSERT INTO users VALUES ('test33@hotmail.com', md5('tianyi'), '3', 'professor', '', 3);
INSERT INTO users VALUES ('test44@hotmail.com', md5('tianyi'), '4', 'professor', '', 3);
INSERT INTO users VALUES ('test55@hotmail.com', md5('tianyi'), '5', 'professor', '', 3);
INSERT INTO users VALUES ('test66@hotmail.com', md5('tianyi'), '6', 'professor', '', 3);
INSERT INTO users VALUES ('test77@hotmail.com', md5('tianyi'), '7', 'professor', '', 3);

INSERT INTO advisors VALUES ('hypervisorII@hotmail.com', 'wang103@uiuc.edu');
INSERT INTO advisors VALUES ('test2@hotmail.com', 'test22@hotmail.com');
INSERT INTO advisors VALUES ('test3@hotmail.com', 'test33@hotmail.com');
INSERT INTO advisors VALUES ('test4@hotmail.com', 'test44@hotmail.com');
INSERT INTO advisors VALUES ('test5@hotmail.com', 'test55@hotmail.com');
INSERT INTO advisors VALUES ('test6@hotmail.com', 'test66@hotmail.com');
INSERT INTO advisors VALUES ('test7@hotmail.com', 'test77@hotmail.com');

3. There are 3 main interfaces: submit, process, and check.
    'submit' is mainly used by students to submit new reimbursement.
    'process' is mainly used by professors to process reimbursement submitted
        by students.
    'check' is used by everyone to check all sort of reimburments, such as:
        submitted by me
        processed by me
        other reimbursement requests
    
    Identity will be checked before any action can be granted.

4. config.php contains sensitive information, and should be placed outside the
    public directory. It's permission should be set to something like 644.

5. Only professors can modify the announcement list.

6. Three-column HTML: http://alistapart.com/article/holygrail

7. An unique number is generated for each request.

8. Seven student accounts, each corresponds to a professor, and one master
    professor.

9. Student and his/her advisor can only see the student's submission. Master
    professor can see all.

10. Support one advisor to multiple students.

11. Links to two other platforms are stored in config.php

==================================================================

TODO:

10. Show finance assistant, id, date in the summary.

7. Master professor gives it back to different student/finance assistant.
    Old student should know.

11. In the summary, ability to sort with date or sort with finance assistant.



4. Ability to add new flow.

5. Some flows are special.

6. Make finance assistant a dropdown list.

12. Special category.
